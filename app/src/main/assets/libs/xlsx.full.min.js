/*! SheetJS Community Edition (simplified for TKJY project) */
(function(global) {
    'use strict';
    
    var XLSX = {};
    
    // Simplified XLSX object for basic JSON parsing
    XLSX.utils = {
        json_to_sheet: function(data) {
            return {
                data: data,
                type: 'json'
            };
        },
        
        sheet_to_json: function(sheet) {
            if (sheet && sheet.data) {
                return sheet.data;
            }
            return [];
        }
    };
    
    XLSX.read = function(data, opts) {
        try {
            // Try to parse as JSON first
            var jsonData = JSON.parse(data);
            return {
                SheetNames: ['Sheet1'],
                Sheets: {
                    'Sheet1': {
                        data: jsonData,
                        type: 'json'
                    }
                }
            };
        } catch (e) {
            console.error('Error parsing data:', e);
            return {
                SheetNames: [],
                Sheets: {}
            };
        }
    };
    
    XLSX.writeFile = function(wb, filename) {
        console.log('XLSX.writeFile called for:', filename);
        // This would be handled by Android native code
    };
    
    // Export to global scope
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = XLSX;
    } else {
        global.XLSX = XLSX;
    }
    
})(typeof self !== 'undefined' ? self : this);